#!/usr/bin/env python3

import os
import subprocess
from threading import Lock, Timer

import inotify.adapters

started = True
timer = None


def start():
    global started, timer
    subprocess.check_call(
        [
            "rsync",
            "--delete",
            "--recursive",
            "/src/core/build/classes/java/main/org/mapfish/print/",
            "/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/org/mapfish/print/",
        ]
    )
    print("Start Tomcat")
    subprocess.check_call(["catalina.sh", "start"])
    started = True
    timer = None


def main():
    global started, timer
    subprocess.check_call(["catalina.sh", "start"])

    inotify_tree = inotify.adapters.InotifyTree("/src/core/build")

    lock = Lock()
    for _, type_names, path, filename in inotify_tree.event_gen(yield_nones=False):
        if "IN_CLOSE_WRITE" in type_names:
            with lock:

                if timer is not None:
                    timer.cancel()
                    timer = None

                if started:
                    print("Stop Tomcat")
                    subprocess.check_call(["catalina.sh", "stop", "5", "-force"])
                    # Remove the pid file so that the next start will not fail
                    with open(os.environ["CATALINA_PID"], "w"):
                        pass
                    started = False

                timer = Timer(10, start)
                timer.start()


if __name__ == "__main__":
    main()
